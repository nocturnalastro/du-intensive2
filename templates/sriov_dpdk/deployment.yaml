{{ $Replica := "1"}}
{{ if ne (index . "Replica") nil }}
{{ $Replica = .Replica }} {{/* Replica isn't set if replica set to 1  // TODO raise bug in kube-burner */}}
{{- end }}
{{ $suffix := $Replica }}
{{- if .group }}
{{- $suffix = print .group "-" $Replica }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpdk-deployment-{{ $suffix }}
  labels:
    app: dpdk-deployment-{{ $suffix }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dpdk-deployment-{{ $suffix }}
  template:
    metadata:
      labels:
        app: dpdk-deployment-{{ $suffix }}
      annotations:
        {{- if .scc_privileged }}
        openshift.io/required-scc: privileged
        {{- end }}
        cpu-load-balancing.crio.io: disable
        cpu-quota.crio.io: disable
        irq-load-balancing.crio.io: disable
        {{- template "parts_network_defs" (dict "networks" .networks "indent" 8) }}
    spec:
      shareProcessNamespace: true
      serviceAccountName: sriovdpdksa
      runtimeClassName: {{ .performanceProfile | default "performance-openshift-node-performance-profile" }}
      containers:
        - image: {{ .Image_dpdk }}
          command:
            - /bin/sh
            - -c
            - |
              ALWD_CPUS=`cat /proc/self/status | grep 'Cpus_allowed_list' | sed 's/Cpus_allowed_list://' | awk -F"," '{print $1}'`
              tail -f /dev/null | dpdk-testpmd --iova-mode=va -- --portmask=0x1 --nb-cores=2 --forward-mode=mac --port-topology=loop --auto-start --stats-period 1 2>&1 &
              sleep infinity
          imagePullPolicy: {{ .imagePullPolicy | default "Always" }}
          livenessProbe:
            exec:
              command:
                - ls
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 7
          name: dpdk-1
          resources:
            {{- $cpu_limit := .cpu_limit | default "16" }}
            {{- $mem_limit := .mem_limit | default "32Gi" }}
            {{- $hugepages_limit := .hugepages_limit | default | default "16Gi" }}
            requests:
              cpu: {{ (.cpu_request | default $cpu_limit) | quote }}
              memory: {{ (.mem_request | default $mem_limit) | quote }}
              hugepages-1Gi: {{ .hugepages_request | default $hugepages_limit | quote }}
              {{- if (.ephemeral_storage_request | default .ephemeral_storage_limit) }}
              ephemeral-storage: {{ (.ephemeral_storage_request | default .ephemeral_storage_limit) | quote }}
              {{- end }}
              {{- template "parts_network_resources" (dict "networks" .networks "indent" 14 ) }}
              {{- if .accelerator_model }}
              {{ print (.accelerator_model | quote) ": '1'" }}
              {{- end }}
            limits:
              cpu: {{ $cpu_limit | quote }}
              memory: {{ $mem_limit | quote }}
              hugepages-1Gi: {{ $hugepages_limit | quote }}
              {{- if .ephemeral_storage_limit }}
              ephemeral-storage: {{ .ephemeral_storage_limit | quote }}
              {{- end }}
              {{- template "parts_network_resources" (dict "networks" .networks "indent" 14 ) }}
              {{- if .accelerator_model }}
              {{ print (.accelerator_model | quote) ": '1'" }}
              {{- end }}
          securityContext:
            privileged: true
            capabilities:
              add:
                - IPC_LOCK
                - NET_ADMIN
                - NET_BIND_SERVICE
                - SYS_NICE
                - NET_RAW
              drop:
                - ALL
            runAsUser: 0
          volumeMounts:
            - mountPath: /dev/hugepages
              name: hugepage
            {{- template "parts_volume_mounts" (dict "volumes" .volumes "indent" 12) }}
          env:
            - name: TZ
              value: UTC
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_UID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.uid
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
        {{- template "parts_extra_containers" (dict "N_extra_containers" (.N_extra_containers | default 0) "Image_ubi" (.Image_ubi | default "") "Replica" $suffix "extra_volumes" .extra_volumes "indent" 8 ) }}
      volumes:
        - emptyDir: {}
          name: shared-sockets
        - emptyDir:
            medium: HugePages
          name: hugepage
        {{- template "parts_volume_defs" (dict "volumes" .volumes "indent" 8) }}
