{{ $Replica := "1"}}
{{ if ne (index . "Replica") nil }}
{{ $Replica = .Replica }} {{/* Replica isn't set if replica set to 1  // TODO raise bug in kube-burner */}}
{{- end }}
{{ $suffix := $Replica }}
{{- if .group }}
{{- $suffix = print .group "-" $Replica }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: du-workload-{{ $suffix }}
  labels:
    group: load
    svc: du-workload-{{ $suffix }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: du-workload-{{ $suffix }}
      redhat-best-practices-for-k8s.com/generic: target
  template:
    metadata:
      labels:
        group: load
        name: du-workload-{{ $suffix }}
        redhat-best-practices-for-k8s.com/generic: target
      annotations:
        # Disable CPU balance with CRIO
        irq-load-balancing.crio.io: "disable"
        cpu-load-balancing.crio.io: "disable"
        cpu-quota.crio.io: "disable"
    spec:
      runtimeClassName: {{ .performanceProfile | default "performance-openshift-node-performance-profile" }}
      containers:
        - name: du-workload-{{ $suffix }}
          image: {{ .Image_stressng | quote}}
          imagePullPolicy: IfNotPresent
          # Request and Limits must be identical for the Pod to be assigned to the QoS Guarantee
          resources:
            requests:
              cpu: {{ .cpu_limit | default 31 }}
              memory: {{ .mem_limit | default "1024M" }}
              hugepages-1Gi: {{ .hugepages_1G | default "16Gi" }}
            limits:
              cpu: {{ .cpu_limit | default 31 }}
              memory: {{ .mem_limit | default "1024M" }}
              hugepages-1Gi: {{ .hugepages_1G | default "16Gi" }}
          env:
            - name: stress_cpu
              value: {{ .cpu_stress | default "31" | quote }}
            - name: stress_vm
              value: {{ .vm_stress | default "1" | quote }}
            - name: stress_vm-bytes
              value: {{ .vm_bytes_stress | default "512M" | quote }}
          volumeMounts:
            - name: hugepage
              mountPath: /hugepages
            {{- template "parts_volume_mounts" (dict "volumes" .volumes "indent" 12) }}
        - name: nginx
          image: {{ .Image_nginx | quote }}
          resources:
            requests:
              cpu: 1
              memory: 256Mi
            limits:
              cpu: 1
              memory: 256Mi
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 60
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 60
        {{- template "parts_extra_containers" (dict "N_extra_containers" (.N_extra_containers | default 0) "Image_ubi" (.Image_ubi | default "") "Replica" $suffix "extra_volumes" .extra_volumes "indent" 8 ) }}
      dnsPolicy: Default
      terminationGracePeriodSeconds: 1
      volumes:
        - name: hugepage
          emptyDir:
            medium: HugePages
        {{- template "parts_volume_defs" (dict "volumes" .volumes "indent" 8) }}