{{ $Replica := "1"}}
{{ if ne (index . "Replica") nil }}
{{ $Replica = .Replica }} {{/* Replica isn't set if replica set to 1  // TODO raise bug in kube-burner */}}
{{- end }}
{{ $suffix := $Replica }}
{{- if .group }}
{{- $suffix = print .group "-" $Replica }}
{{- end }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: webserver-{{ $suffix }}
spec:
  template:
    metadata:
      labels:
        name: webserver-{{ $suffix }}
        redhat-best-practices-for-k8s.com/generic: target
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      containers:
        - name: webserver
          image: {{ .Image_nginx | quote }}
          resources:
            {{- $cpu_limit := .cpu_limit | default "200m" }}
            {{- $mem_limit := .mem_limit | default "1025Mi" }}
            {{- $cpu_request := .cpu_request | default "120m" }}
            {{- $mem_request := .mem_request | default "700Mi" }}
            requests:
              cpu: {{ (.cpu_request | default $cpu_request) | quote }}
              memory: {{ (.mem_request | default $mem_request) | quote }}
              {{- if .hugepages_request | default .hugepages_limit }}
              hugepages-1Gi: {{ .hugepages_request | default .hugepages_limit | quote }}
              {{- end }}
              {{- if .ephemeral_storage_request | default .ephemeral_storage_limit }}
              ephemeral-storage: {{ .ephemeral_storage_request | default .ephemeral_storage_limit | quote }}
              {{- end }}
            limits:
              cpu: {{ $cpu_limit | quote }}
              memory: {{ $mem_limit | quote }}
              {{- if .hugepages_limit }}
              hugepages-1Gi: {{ .hugepages_limit | quote }}
              {{- end }}
              {{- if .ephemeral_storage_limit }}
              ephemeral-storage: {{ .ephemeral_storage_limit | quote }}
              {{- end }}
          ports:
          - containerPort: 8080
            protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts: {{ template "parts_volume_mounts" (dict "indent" 12) }}
        - name: stressng
          image: {{ .Image_stressng | quote }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: stress_cpu
              value: {{ .cpu_stress | default 1 | quote }}
        {{- template "parts_extra_containers" (dict "N_extra_containers" (.N_extra_containers | default 0) "Image_ubi" (.Image_ubi | default "") "Replica" $suffix "extra_volumes" .extra_volumes "indent" 8) }}
      restartPolicy: Always
      volumes: {{- template "parts_volume_defs" (dict "indent" 8) }}
  replicas: {{ .num_of_replicas | default 1 | int }}
  selector:
    matchLabels:
      name: webserver-{{ $suffix }}
      redhat-best-practices-for-k8s.com/generic: target
  strategy:
    type: RollingUpdate
